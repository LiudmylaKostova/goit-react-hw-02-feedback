{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/Section/Section.js","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","Object","keys","map","element","className","styles","button","name","onClick","e","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","statistics","feedback","Section","title","children","App","state","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gRA0BeA,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAO,OAC/B,wBACEC,UAAWC,IAAOC,OAElBC,KAAMJ,EACNK,QAAS,SAAAC,GAAC,OAAIV,EAAgBU,IAJhC,SAMGN,GAJIA,SCCAO,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,K,gBC6BEC,EA5BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAKb,UAAWC,IAAOa,WAAvB,SACGF,EAAQ,EACP,qCACE,oBAAGZ,UAAWC,IAAOc,SAArB,mBAAsCN,KACtC,oBAAGT,UAAWC,IAAOc,SAArB,sBAAyCL,KACzC,oBAAGV,UAAWC,IAAOc,SAArB,kBAAqCJ,KACrC,oBAAGX,UAAWC,IAAOc,SAArB,oBAAuCH,KACvC,oBAAGZ,UAAWC,IAAOc,SAArB,gCACsBF,EADtB,UAKF,cAAC,EAAD,CAAcN,QAAQ,yBCDfS,EAlBC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,mCAAMD,EAAN,OACCC,MC+CQC,E,4MA3CbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPhB,gBAAkB,SAAAU,GAChB,IAAMF,EAAOE,EAAEgB,OAAOlB,KACtB,EAAKmB,UAAS,SAAAC,GAAS,sBAAQpB,EAAOoB,EAAUpB,GAAQ,O,EAG1DqB,mBAAqB,WAEnB,OADc,EAAKJ,MAAMX,KAAO,EAAKW,MAAMV,QAAU,EAAKU,MAAMT,K,EAIlEc,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKP,MAAMX,KAAO,EAAKe,qBAAwB,M,4CAGpE,WACE,OACE,qCACE,cAAC,EAAD,CAASP,MAAM,wBAAf,SACE,cAAC,EAAD,CACEvB,QAASkC,KAAKR,MACdzB,gBAAiBiC,KAAKjC,oBAG1B,cAAC,EAAD,CAASsB,MAAM,aAAf,SACE,cAAC,EAAD,CACER,KAAMmB,KAAKR,MAAMX,KACjBC,QAASkB,KAAKR,MAAMV,QACpBC,IAAKiB,KAAKR,MAAMT,IAChBC,MAAOgB,KAAKJ,qBACZX,mBAAoBe,KAAKH,6C,GApCnBI,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,WAAa,+BAA+B,SAAW,+B,kBCAzED,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.b1a84db7.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {Object.keys(options).map(element => (\r\n        <button\r\n          className={styles.button}\r\n          key={element}\r\n          name={element}\r\n          onClick={e => onLeaveFeedback(e)}\r\n        >\r\n          {element}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onleaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Notification from '../Notification/Notification';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div className={styles.statistics}>\r\n      {total > 0 ? (\r\n        <>\r\n          <p className={styles.feedback}>Good: {good}</p>\r\n          <p className={styles.feedback}>Neutral: {neutral}</p>\r\n          <p className={styles.feedback}>Bad: {bad}</p>\r\n          <p className={styles.feedback}>Total: {total}</p>\r\n          <p className={styles.feedback}>\r\n            Positive feedback: {positivePercentage}%\r\n          </p>\r\n        </>\r\n      ) : (\r\n        <Notification message=\"No feedback given\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","const Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2> {title} </h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\n// const Section = ({ children }) => {\r\n//   return (\r\n//     <>\r\n//       <h2> Please leave feedback </h2>\r\n//       {children}\r\n//     </>\r\n//   );\r\n// };\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\n\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\n// import Notification from './components/Notification/Notification';\nimport Section from './components/Section/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = e => {\n    const name = e.target.name;\n    this.setState(prevState => ({ [name]: prevState[name] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1YmAc\",\"feedback\":\"Statistics_feedback__4DlcV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1Wssr\"};"],"sourceRoot":""}